plugins {
    id 'idea'
    id 'java'
    id 'maven'
    id 'signing'
}

group 'chat.dim'
//version '1.0-SNAPSHOT'
version '0.4.3'

def mod = 'StarGate'
def desc = 'Network Connection Module'

def gitUrl = 'https://github.com/dimchat/sdk-java.git'
def siteUrl = 'https://github.com/dimchat/sdk-java'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    maven { url 'https://maven.aliyun.com/repository/google' }
    maven { url 'https://maven.aliyun.com/repository/jcenter' }
    maven { url 'https://maven.aliyun.com/nexus/content/groups/public' }
    mavenCentral()
    google()
}

dependencies {
    compile group: 'chat.dim', name: 'TCP', version: '0.4.0'
    compile group: 'chat.dim', name: 'UDP', version: '0.4.0'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'jar'
                name mod
                description desc
                url siteUrl
                licenses {
                    license {
                        name 'MIT'
                        url 'https://mit-license.org'
                    }
                }
                developers {
                    developer {
                        id 'moky'
                        name 'Albert Moky'
                        email 'albert.moky@gmail.com'
                        roles {
                            role 'architect'
                        }
                        organization 'DIM Group'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourceJar
    archives javadocJar
}

signing {
    sign configurations.archives
}

tasks.withType(Javadoc) {
    options {
        encoding 'UTF-8'
        charSet 'UTF-8'
        links 'http://docs.oracle.com/javase/7/docs/api'
    }
    options.addStringOption('Xdoclint:none', '-quiet')
}

uploadArchives {

    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                packaging 'jar'
                name mod
                description desc
                url siteUrl
                licenses {
                    license {
                        name 'MIT'
                        url 'https://mit-license.org'
                    }
                }
                developers {
                    developer {
                        id 'moky'
                        name 'Albert Moky'
                        email 'albert.moky@gmail.com'
                        roles {
                            role 'architect'
                        }
                        organization 'DIM Group'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
